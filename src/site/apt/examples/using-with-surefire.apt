 ------
 With Surefire
 ------
 ------
 $Id$

~~ 
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~  http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~ 

Using With Surefire

* Simple Test

 Below is a very simple test which shows how to use the 
 {{{http://www.openqa.org/selenium-rc/java.html}Selenium Java Client Driver}}.
 
 <<NOTE:>>
 This is a normal JUnit-style test, though you may want to use JUnit-4
 or TestNG which provide better per-suite-level setup that is more
 ideal for configuration of the Selenium component.  Have a look
 {{{https://svn.apache.org/repos/asf/geronimo/server/trunk/testsupport/testsupport-selenium/src/main/java/org/apache/geronimo/testsupport/SeleniumTestSupport.java}here}}
 for a better example of a selenium test support framework that is
 more efficent.

+----------+
package org.codehaus.mojo.selenium;

import junit.framework.TestCase;

import com.thoughtworks.selenium.DefaultSelenium;
import org.openqa.selenium.server.SeleniumServer;

public class SeleniumExampleTest
    extends TestCase
{
    protected DefaultSelenium createSeleniumClient(String url) throws Exception {
        if (url == null) {
            url = "http://localhost:" + SeleniumServer.DEFAULT_PORT;
        }
        DefaultSelenium selenium = new DefaultSelenium(
            "localhost", SeleniumServer.DEFAULT_PORT, "*firefox", url);
        
        return selenium;
    }
    
    protected void testSomethingSimple() throws Exception {
        DefaultSelenium selenium = createSeleniumClient("http://localhost:8080/");
        selenium.start();
        
        //
        // This is an exmaple of testing the Apache Geroniom Welcome page for specific text
        //
        
        selenium.click("link=JVM");
        selenium.waitForPageToLoad("30000");
        selenium.click("link=Welcome");
        selenium.waitForPageToLoad("30000");
        assertEquals("Geronimo Console", selenium.getTitle());
        assertEquals("Welcome", selenium.getText(
            "xpath=/html/body/table[@id='rootfragment']/tbody/tr[2]/td/table/tbody/tr[2]/td[4]/table/tbody/tr[1]/td/table/tbody/tr[1]/td/div/table/tbody/tr/td[2]/table/tbody/tr/td[1]/strong"));
        
        // Test help link
        selenium.click("link=help");
        selenium.waitForPageToLoad("30000");
        selenium.isTextPresent("This is the help for the Geronimo Administration Console Welcome.");
        
        selenium.stop();
    }
}
+----------+

 To run this test, and have it work, you will need to:
 
 * Start your application server
 
 * Deploy your web-aplication
 
 * Start the Selenium maven plugin (this plugin)
 
 * Execute Surefire tests
 
 []

